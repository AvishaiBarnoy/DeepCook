
# To Do:
1. reform add_meal_questions() in io_data to be more general and versatile  
	1.1 add description printed before everything to explain what's going on.
	1.2 creat a "def check_input(inp)" function to test if the input is correct
2. check convention for column naming with pandas.
3. add enumerative classes
4. go through TODO.txt and evaluate the different ideas.
5. go through roadmap and do the same as for TODO.txt.

# Things to Add to functions:

## Data organization:
	1. add time_stamp column for better choice making, maybe keep timestamp as a list for statistics?
	2. Do not remove times_made so statistics can be made
	3. implement many timestamps tracking - maybe add a meal creation logfile where timestamps can be stored

## Features:
	1. meal scaling factor - can be used for weekly meal planning
	2. preparation time and cooking time (short, medium, long), write an example: soup takes a short time to make but cooks for a long time, while salad is medium to make but once done it is ready.
	3. cooking time	(short, medium, long), this should be "free time" with no extra work from cook
	4. recipe suggestion - Krutit, Kitchencoach
	5. add another option for "Kosher" 4 - Vegan.
	6. Meal name in Hebrew

## Random choice:
	build a linear function for weights calculations, flags should be specified which weights to add
		with default settings: last_made timestamp, rank, no TA

	1. Adjust weights according to times made - maybe timestamp and then weight adjustment
			is only made if meal was prepared in the last n days.
    2. Adjust weights by ease
    3. Give k-choices ordered by ease and/or rank
    4. make choice by kosher type

## Choose TA:
	1. choice by type.
	2. Time dilation - TA is only availabe in random if TA was not ordered in the past X days. 

